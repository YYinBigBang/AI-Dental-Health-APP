name: Build and Deploy to GCE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: mtk-genius-for-home # TODO: update Google Cloud project id
  GAR_NAME: github-actions # TODO: update Artifact Registry name
  GAR_LOCATION: asia-east1 # TODO: update Artifact Registry location
  SERVICE: ai-dental-health-app # Service name for tagging
  INSTANCE_NAME: ai-dental-health-app-instance # TODO: update GCE instance name
  ZONE: asia-east1-b # TODO: update GCE zone
  PORT: 8000 # Port to be used by Gunicorn

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Authenticate to Google Cloud
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_KEY }}'

      # Docker auth and build
      - name: Docker Auth
        run: |-
          gcloud auth configure-docker "${{ env.GAR_LOCATION }}-docker.pkg.dev"

      - name: Build and Push Container
        run: |-
          IMAGE_TAG="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}"
          docker build -t "$IMAGE_TAG" ./
          docker push "$IMAGE_TAG"

      - name: Create Startup Script
        run: |
          IMAGE_TAG="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}"
          echo '#!/bin/bash' > startup-script.sh
          echo 'sudo apt-get update' >> startup-script.sh
          echo 'sudo apt-get install -y docker.io' >> startup-script.sh
          echo 'sudo docker pull $IMAGE_TAG' >> startup-script.sh
          echo 'sudo docker run -d -p 8000:8000 -e PORT=${PORT} $IMAGE_TAG' >> startup-script.sh

      - name: Upload Startup Script
        run: |
          gcloud compute instances create ${INSTANCE_NAME} \
            --zone=${ZONE} \
            --metadata-from-file startup-script=startup-script.sh \
            --image-family=debian-11 \
            --image-project=debian-cloud \
            --scopes=https://www.googleapis.com/auth/cloud-platform

      - name: Update GCE Instance Container
        run: |
          IMAGE_TAG="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}"
          gcloud compute instances update-container ${INSTANCE_NAME} \
            --zone=${ZONE} \
            --container-image=$IMAGE_TAG
