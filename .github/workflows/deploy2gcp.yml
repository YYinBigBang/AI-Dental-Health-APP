name: Build and Deploy to Compute Engine

on:
  push:
    branches: [ "main" ]

env:
  PROJECT_ID: mtk-genius-for-home # TODO: update Google Cloud project id
  GAR_NAME: github-actions # TODO: update Artifact Registry name
  GAR_LOCATION: asia-east1 # TODO: update Artifact Registry location
  VM_NAME: ai-dental-health-vm # TODO: update Compute Engine VM name
  VM_ZONE: asia-east1-b # TODO: update Compute Engine VM zone

jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Google Auth
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_KEY }}'

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        run: |-
          gcloud auth configure-docker "${{ env.GAR_LOCATION }}-docker.pkg.dev"

      # Build and Push Container
      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.VM_NAME }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.VM_NAME }}:${{ github.sha }}"

      # SSH into the VM and deploy the container
      - name: Deploy to Compute Engine
        run: |-
          # Install the gcloud CLI
          curl https://sdk.cloud.google.com | bash
          exec -l $SHELL
          gcloud init

          # Set the project and compute zone
          gcloud config set project ${{ env.PROJECT_ID }}
          gcloud config set compute/zone ${{ env.VM_ZONE }}

          # Create the VM instance if it doesn't exist
          if ! gcloud compute instances describe ${{ env.VM_NAME }}; then
            gcloud compute instances create-with-container ${{ env.VM_NAME }} \
              --zone ${{ env.VM_ZONE }} \
              --container-image "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.VM_NAME }}:${{ github.sha }}"
          else
            # Stop the VM if it's running
            gcloud compute instances stop ${{ env.VM_NAME }}

            # Update the VM to use the new container image
            gcloud compute instances update-container ${{ env.VM_NAME }} \
              --container-image "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.VM_NAME }}:${{ github.sha }}"
            
            # Start the VM
            gcloud compute instances start ${{ env.VM_NAME }}
          fi

      # Show Output
      - name: Show Output
        run: |-
          echo "Deployed to Compute Engine VM: ${{ env.VM_NAME }}"
