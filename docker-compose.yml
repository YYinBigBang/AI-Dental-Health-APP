version: '3.8'

services:
  django:
    build: .
    image: django_server
    container_name: django_server
    # Load environment variables from .env
    env_file:
      - .env
    # Expose port 8000 internally (nginx will proxy to this)
    expose:
      - "8000"
    # Run migrate before starting Gunicorn. This applies existing migrations.
    command: >
      sh -c "python manage.py migrate &&
             gunicorn --workers=7 --timeout=90 --bind=0.0.0.0:8000 AI_Dental_Health_APP.wsgi:application"
    volumes:
      - django_data:/home/appuser/AI_Dental_Health_APP/data/django
    depends_on:
      - postgres_db
    restart: always

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    # Mount SSL certificates and custom nginx.conf
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt/live/dental-service.jieniguicare.org/fullchain.pem:/etc/letsencrypt/live/dental-service.jieniguicare.org/fullchain.pem:ro
      - /etc/letsencrypt/live/dental-service.jieniguicare.org/privkey.pem:/etc/letsencrypt/live/dental-service.jieniguicare.org/privkey.pem:ro
    depends_on:
      - django
    entrypoint: /bin/sh -c "nginx -g 'daemon off;'"
    restart: always

  postgres_db:
    image: postgres:13
    container_name: postgres_db
    # Load database environment variables from .env
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always

volumes:
  django_data:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/home/haoyu6875/docker_volumes/django_data"

  postgres_data:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/home/haoyu6875/docker_volumes/postgres_data"
